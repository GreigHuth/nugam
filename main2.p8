pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--Made By Gurg
-- i want it to be made clear that i never said i was actually good at programming


#include includes/camera.lua
#include includes/gun.lua
#include enums.p8
#include npc_scripts.p8

--------
---GLOBALS
----------
timer = 0
npcs = {}
sensors = {}
DEBUG = true

enemy_scripts = {
    [NPC_IDS.MOVING_VILLAGER] = function(n) m_villager_script(n) end,
    [NPC_IDS.EXPLOSION] = function(n) explosion_script(n) end 
}

----------
---MATHS
----------
--rounds x to nearest whole integer
function round(x)
    local y = x - flr(x)
    if y >= 0.5 then return ceil(x) 
    else  return flr(x)
    end
end

--finds the euclidean distance between two points
function e_dist(x, y, a, b)
    return sqrt((a-x)^2 + (b-y)^2)
end

--changes the basis of the vector [x,y] to [xb,yb]
function change_basis(xb, yb, x, y)
    x = x - xb --x translated
    y = y - yb
    return x, y
end

--rotate pixel around given basis
function rotate_pixel(x, y, theta, xb, yb, b)

    if not b then b = false end
    if not basis_x then basis_x = 0 end
    if not basis_y then basis_y = 0 end

    change_basis(xb, yb, x, y)

    local d = 360
    local a = 1
    local new_x = x*a*cos(theta/d) - y*a*sin(theta/d)
    local new_y = x*a*sin(theta/d) + y*a*cos(theta/d)

    --todo write special conditions for certain angles to fix how it looks?

    if b == false then
        return new_x +basis_x, new_y+basis_y
    else 
        return new_x, new_y
    end
end

--linear interpolation
function lerp(p0, p1, ratio)
    return (1-ratio)*p0 + ratio*p1
end

function normalize(x, y)
    local l = sqrt( (x*x)+(y*y) ) 
    return x / l, y / l

end


  

---------
---CAMERA CODE
---------

function update_camera()

    local camera_speed = 1
    if player.px - camera_pos.x > 70 then 
        camera_pos.x += camera_speed
    elseif player.px - camera_pos.x < 54 then 
        camera_pos.x -= camera_speed
    end

    camera_speed = 1.4
    if player.py - camera_pos.y > 90 then 
        camera_pos.y += camera_speed
    elseif player.py - camera_pos.y < 40 then 
        camera_pos.y -= camera_speed
    end

   

    ---lower bounds
    local lower_y = 0 
    local lower_x = 0

    if camera_pos.x < lower_x then camera_pos.x = lower_x end
    if camera_pos.y < lower_y then camera_pos.y = lower_y end

    ---upper bounds
    local upper_x = 16*8
    local upper_y = 16*8

    if camera_pos.x > upper_x then camera_pos.x = upper_x end
    if camera_pos.y > upper_y then camera_pos.y = upper_y end

    camera(camera_pos.x, camera_pos.y)
end

------------
---ACTOR CODE
------------

function hit_tile(flag, x, y, w ,h)
    
    --need to offset w and h
    for i=x, x+w-1, w-1 do
        if fget(mget(i/8, y/8), flag) or fget(mget(i/8, (y+h-1)/8), flag) then
            return true
        end
    end
    return false
end

--create actor(x spawn, y spawn, width, height, sprites)

function create_actor(x, y, w, h, anim)
    return {
        x = x, -- map pos (tiles)
        y = y,
        px = x*8, -- world pos (pixels)
        py = y*8,
        dx = 0,
        dy = 0,
        w = w,
        h = h,
        anim = anim,
        frame = 1,
        timer = 0,
        flipx = true,
        jump_time = 0,
        hbx = 2,
        hby = 2,
        flags ={
            in_air = true
        }
    }
end

function create_npc(x, y, w, h, anim, id)

    local actor = create_actor(x, y, w, h, anim)

    printh("actor ID"..id.." created at "..x..","..y)

    actor.id = id

    actor.dest_x = actor.px --same as pixel positions
    actor.dest_y = actor.py
    add(npcs, actor)

    return actor
    
end

function delete_actor(actor)
    del(npcs, actor)
    actor = nil
    printh("actor deleted")
end




function move_byx(npc, x, y)
    npc.px += x
end


function npc_update(npc)

    local speed = 0.5

    local script = enemy_scripts[npc.id]

    npc.timer += 1

    script(npc)

    if npc.px < npc.dest_x then   
        move_byx(npc,speed, 0)
    elseif npc.px > npc.dest_x then 
        move_byx(npc, -speed, 0)
    end
    
end

function actor_draw(actor)
    spr(actor.anim[actor.frame], actor.px, actor.py, 1, 1, actor.flipx)
end

function hit_tile(flag, x, y, w ,h)
    --need to offset w and h
    for i=x, x+w-1, w-1 do
        if fget(mget(i/8, y/8), flag) or fget(mget(i/8, (y+h-1)/8), flag) then
            return true
        end
    end
    return false
end

---same as hit tile but only checks the top of the hitbox
function top_hit_tile(flag, x, y, w)
    --need to offset w and h
    if fget(mget(x/8, y/8), flag) or fget(mget((x+w-1)/8, y/8), flag) then
        return true
    end
    return false
end

---for tiles in which only the top hald of the tile is solid
function hit_tile_tophalf()
    
end

function bot_hit_tile(flag, x, y, w, h)
    --need to offset w and h
    if fget(mget(x/8, (y+h-1)/8), flag) or fget(mget((x+w-1)/8, (y+h-1)/8), flag) then
        return true
    end
    return false
end

-----
---SCANNING CODE
-----

--works backwards from index and returns the postion of the closest space to the index
--returns the index if there is a space and -1 otherwise
function find_space(start, stop, text)

    while stop > start do
        if sub(text, stop, stop) ==  " " then 
            return stop
        end
        stop -= 1
    end
    return -1
end

--prints dialogue and item descriptions to the screen
function print_desc(spr)

    local text = collectables[spr]

    local xoff = 1
    local yoff = 100

    local max_chars = 30

    local last_space = 0 --position of last space in string

    local p_line = 0 --print line

    --draw outline
    
    --draw text box
    rectfill(camera_pos.x+xoff, camera_pos.y+yoff, camera_pos.x+xoff+(31*4)+2, camera_pos.y+yoff+((6*3)+3), 0)
    rect(camera_pos.x+xoff, camera_pos.y+yoff, camera_pos.x+xoff+(31*4)+2, camera_pos.y+yoff+(6*3)+3, 8)

    --work out where the line breaks are
    last_space = find_space(0, 31, text)
    last_space2 = find_space(32, 60, text)

    --calculate offsets for text
    local x = camera_pos.x+xoff+2
    local y = camera_pos.y+yoff+2

    --display text
    print(sub(text, 0, last_space), x, y, 7)
    print(sub(text, last_space+1, last_space2), x, y+6, 7)
    print(sub(text, last_space2+1, 88), x, y+12, 7)

end

function check_los()

    local cursor_x = stat(32)+camera_pos.x
    local cursor_y = stat(33)+camera_pos.y

    for t = 0, 1, 0.1 do 
        local i_x = lerp(player.x, cursor_x, t)
        local i_y = lerp(player.y, cursor_y, t)
        
        if fget(mget(i_x/8, i_y/8), TILE_FLAG.SOLID) == true then
            return false
        end
    end

    return true

end

--looks up sprite number at scanning reticule
function scanner_lookup_spr()

    for i=cursor.px, cursor.px+cursor.w, 1 do
        for j=cursor.py, cursor.py+cursor.w, 1 do
            local s = mget(i/8, j/8)
            if fget(s, TILE_FLAG.SCANNABLE) == true then
                ---if check_los() then
                    return s
                ---else 
                
            end
        end
    end
    return -1
end



------------
--- PLAYER CODE
------------

function mouse_left_press()
    return (stat(34) | 0b110) == 7
end

function mouse_right_press()
    return (stat(34) | 0b101) == 7
    
end

function player_draw(actor)
    spr(actor.anim[actor.frame], actor.px, actor.py, 1, 1, actor.flipx)

    if player.flags.in_air then
        if player.dy < 0 then 
            spr(actor.anim[2], actor.px, actor.py, 1, 1, actor.flipx)
        elseif player.dy > 0 then
            spr(actor.anim[3], actor.px, actor.py, 1, 1, actor.flipx)
        end
    end
end

function draw_hitbox(actor)
    local hb_offset = actor.hb_xoff --offsets hitbox from absolute player position
    local hb_colour = 7

    local actor_drawx = actor.px+actor.hbx
    local actor_drawy =actor.py+actor.hby

    --rect(actor.px+hb_offset, actor.py, actor.px+hb_offset+actor.w, actor.py+actor.h, hb_colour)
    rect(actor_drawx, actor_drawy, actor_drawx+actor.w, actor_drawy+actor.h)
end

function floor_collision(actor)
    if (actor.dy >= 0) and bot_hit_tile(TILE_FLAG.SOLID, actor.px+actor.hbx, actor.py+actor.dy+actor.hby, actor.w, actor.h) then

        if actor.flags.in_air and not (btn(0,1) or btn(1,1)) then 
            actor.dx = actor.dx / 2
        end

        actor.flags.in_air = false
        actor.flags.falling = false
        actor.dy = 0

        return true
        
    end

    return false
end

function wall_collision(actor)
    if hit_tile(TILE_FLAG.SOLID, actor.px+actor.dx+actor.hbx, actor.py+actor.hby, actor.w, actor.h) then
        return true
    end
    return false
end

function roof_collision(actor)
    
    if top_hit_tile(TILE_FLAG.SOLID, actor.px+actor.hbx, actor.py+actor.dy+actor.hby, actor.w) then
        actor.flags.falling = true
        actor.dy = 0.5

        return true
    end

    return false

end


-----
---player globals
------
up_was_pressed = false 


function player_update(player)

    local dx = 0
    local dy = 0    
    
    local accel = 0.03
    local max_dx = 0.6


    local GODMODE = false
    if GODMODE then 

        if btnp(0, 1) then player.dx -= 1
        elseif btnp(1, 1) then player.dx += 1
        elseif btnp(2, 1) then player.dy -= 1
        elseif btnp(3, 1) then player.dy += 1
        end

        player.px += player.dx
        player.py += player.dy

        player.dx = 0
        player.dy = 0

        return
    end

    
    if player.flags.in_air then
        accel = accel*0.5
    end

    --moving left
    if btn(0, 1) then 

        if player.dx > 0.35 then 
            player.dx = 0.35
        end

        player.dx += -accel
        player.dx = mid (max_dx, player.dx, -max_dx)
        player.flipx = true

    -- moving right
    elseif btn(1, 1) then 

        if player.dx < -0.35 then
            player.dx = -0.35
        end

        player.dx += accel
        player.dx = mid (-max_dx, player.dx, max_dx)
        player.flipx = false

    --friction
    elseif not player.flags.in_air then

        local friction = 0.8 --lower = more friction

        player.dx = player.dx * friction
        if abs(player.dx) < 0.05 then
            player.dx = 0
        end
    end

    if btn(2, 1) and not player.flags.in_air then 

        
        player.flags.in_air = true
        player.dy = -1
    end 



    ----COLLISION
    roof_collision(player)

    local touching_wall = wall_collision(player)
    local rough = hit_tile(TILE_FLAG.ROUGH, player.px+player.dx+player.hbx, player.py+player.hby, player.w, player.h)
        
    if touching_wall then 


       player.dx = 0
        
        player.dy =  player.dy*0.75

        if btn(2,1) and rough then -- wall jump
            if not player.flipx then  --facing right
                player.dx += -1
            else
                player.dx += 1
            end
            player.flags.in_air = false
        end

        ---this part stops you reverse zipping through the walls 
        local still_touching_wall = wall_collision(player)
        if still_touching_wall then 
            player.dx = 0
        end

    else
        player.flags.in_air = true
    end



    local gravity = 0.025
    local max_dy = 1
    player.dy += gravity


    player.dy = mid (-max_dy, player.dy, max_dy)

    if touching_wall and not rough then 
        printh("touching wall")
        if btn(3,1) then
            player.dy = 1.5
        end
    end

    floor_collision(player)


    player.px += player.dx
    player.py += player.dy

    player.x = flr(player.px) >> 3 
    player.y = flr(player.py) >> 3 

    if hit_tile(TILE_FLAG.SCREEN_TELEPORTER, player.px, player.py, 8, 8) then
        player.py = 0
        player.px += 120

        camera_pos.y = 0
        camera_pos.x += 120
    end

end

--------------
---CURSOR CODE
--------------

function cursor_update(cursor)
    cursor.px = stat(32)+camera_pos.x-5
    cursor.py = stat(33)+camera_pos.y-5

    cursor.left_press = mouse_left_press()
    cursor.right_press = mouse_right_press()

end

function cursor_draw(cursor)
    cursor.c = 7

    if scanner_lookup_spr() == 1 then cursor.c = 10 end  

    rect(cursor.px, cursor.py, cursor.px+cursor.w, cursor.py+cursor.w, cursor.c)

    if cursor.left_press then print_desc(scanner_lookup_spr()) end
end



-------------------------------------
-------------------------------------
--CORE FUNCTIONS
-------------------------------------
-------------------------------------

function mkb_init(enable, btn_emu, ptr_lock)
    -- pass args as bitfield into hardware register
    poke(0x5f2d,(enable   and 1 or 0)
               |(btn_emu  and 2 or 0)
               |(ptr_lock and 4 or 0))
end

function _init()

    mkb_init(true, false, false)

    camera_pos = {
        x = 0, 
        y = 0
    }

    player = create_actor(1, 19, 4, 6, {64, 65, 66})

    villager1 = create_npc(10, 52, 7, 8, {70}, NPC_IDS.MOVING_VILLAGER)

    villager2 = create_npc(3, 52, 8, 8, {68}, NPC_IDS.MOVING_VILLAGER)

    cursor = create_actor(0, 0, 3, 3, {})

    cursor.left_press = false
    cursor.right_press = false

    
end

function debug()
    
    dmesg = {} --need to reinitialise every frame
    test = 0
    add(dmesg, timer)
    add(dmesg, player.dx)
    add(dmesg, player.dy)
    add(dmesg, " ")
    add(dmesg, player.flags.in_air)
    
    circfill(player.px, player.py, 0)
    
    local line = 0
    local camx, camy = get_camera_pos()
    for mesg in all(dmesg) do
        color(8)
        print (mesg, 5+camx, line+camy )
        line += 6
    end
end

function _update60()
    timer += 1
    player_update(player)

    foreach(npcs, npc_update)

    cursor_update(cursor)

    if cursor.right_press then
        --create_npc(cursor.px/8, cursor.py/8, 8, 8, {29}, NPC_IDS.EXPLOSION)
    end

    
end


function laser_draw(player, cursor)
    ---first check if the laser will collide with anything
    for i=0.0, 1, 0.01 do 

        local x = lerp(player.px, cursor.px, i)
        local y = lerp(player.py, cursor.py, i)

        printh(i)


        if fget(mget(x/8, y/8), TILE_FLAG.SOLID) then 

            if timer % 2 then 
                line(player.px, player.py, x-(0.125), y-(0.125), 10)
                return
            else
                line(player.px, player.py, x-(0.125), y-(0.125), 8)
                --circfill(x, y, 1, 10)
                return
            end
        end
    end

    if timer % 2 then 
        line(player.px, player.py, cursor.px, cursor.py, 10)
    else
        line(player.px, player.py, cursor.px, cursor.py, 8)
    end
end

function _draw()
    cls()
    local celwh = 120 
    map(0,0, 0, 0, celwh,celwh) --draws background objects

    update_camera() 

    player_draw(player)


    if cursor.right_press then
        laser_draw(player, cursor)

        
    end

    foreach(npcs, actor_draw)



    foreach(bullets, bullet_update_and_draw)

    map(0,0, 0,0, celwh,celwh, 1) --draws foreground objects


    --draw_hitbox(player)
    cursor_draw(cursor)

    
    if DEBUG then
        debug()
    end
end
__gfx__
00000000111111111111111100000000010cc010000440000000000000000000c111111100000000000000000000000000a00000000000000000000000000000
0000000011111111111111110000000001066010000440000000000000000000c111111100000000000000000000000000a00000000000000000000000000000
00000000111111111111111100000000010cc010000440007770777000000000c111111100000000111111111111111100a00000000000000000000000000000
00000000111111111111111100000000010cc010000440000700707000000000c11111110000000012a0aa2112aa0a2100000000000000000000000000000000
00000000111111110000000000000000010cc010000660000700777000000000c111111100000000182aa281182aa28100a07000000000000000000000000000
00000000111111110000000000000000010cc010000440000700700000000000c111111100000000018228100182281000000700000000000000000000000000
00000000111111110000000046444444010cc010000440000700700077000000c111111100000000001881000018810000000070000000000000000000000000
00000000111111110000000046444444010cc010000440000000000077a777a0c111111100000000000110000001100000000007000000000000000000000000
00000000111111111111111111111111000aa0005555555500000000000000000000000000000000000000000000000000000000700000070000000000000000
00000000111111110111111111111110006666004444444400000044444444444400000044444444000000111111100000000000770007700000000000000000
000000000111111100111111111111000661766055555555000004445433333333400000333333330000111727271110000aa000077707000000000000000000
00000000000111000001111111111000061116604444444400004444454333333334000033333333000117222222721000a7aa00000700000000000000000000
00000000000111000000111111110000066176604444444400044444445433333333400033333333000122288888221000aaaa00007070000000000000000000
000000000000100000000111111000005667666555555555004444444445433333333400333333330001228888882210000aa000007077000000000000000000
00000000000000000000001111000000056666504444444404444444444454335353534033333333000111111117771000000000077007700000000000000000
00000000000000000000000110000000500000054444444444444444444445433535353433333333000000000000770000000000770000770000000000000000
00000000111111111111111111111101011111110055555555555555000000000000000055555555000000000000000000000000000000000000000000000000
00000000111111111111111111111110101111110044444444444444000000066000000000000000000000000000000000000000000000000000000000000000
00000000111111111111111111111111111111110055555552222255000000666600000000000000000000000000000000000000000000000000000000000000
000000001111111111111111111111101011111100444444422222440000066dd660000000000000000000000000000000000000000000000000000000000000
00000000111111111111111111111100001111110044444442222244000066d7dd66000000000000000000000000000000000000000000000000000000000000
0000000011111111101111111111111111111111005555555222625500066d7dddd6600000000000000000000000000000000000000000000000000000000000
0000000011110111100101101111111000111111004444444222224400066dddddd6600000000000000000000000000000000000000000000000000000000000
00000000010101010101010111111111011111110044444442222244006666dddd66660000000000000000000000000000000000000000000000000000000000
00000000100000011cccccc1011111010000000000000000000000000666666dd666666000000000000000000000000000000000000000000000000000000000
00000000111111111111111111111110000000000000000000000000066666666666666000000000000000000000000000000000000000000000000000000000
00000000011111111111111111111111000000000000000000000000666666aaaa66666600000000000000000000000000000000000000000000000000000000
00000000101110101c111c1c01111110000000000000000000000000666666aaaa66666600000000000000000000000000000000000000000000000000000000
00000000111111111111111111111100000000000000000000000000666666aaaa66666600000000000000000000000000000000000000000000000000000000
0000000001101111111c111111111111000000000000000000000000666666677666666600000000000000000000000000000000000000000000000000000000
000000001111101111c11c1100111110000000000000000000000000005550077005550000000000000000000000000000000000000000000000000000000000
000000001101111011c1111111111111000000000000000000000000055555077055555000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000101000999000000000000001101000cc1010000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001111000999999001000010000110000ccc100000000000000000000000000000000000000000000000000000000000
00555500005a5a000055550000000000001c1c0009c1c990010000100011110000ccc10000000000000000000000000000000000000000000000000000000000
005a5a0000555500005555000000000000111100001111900111111000ccc66000a1a66000000000000000000000000000000000000000000000000000000000
0055550000555500005a5a00000000000011110000777100001c1c0000ccc1000011110000000000000000000000000000000000000000000000000000000000
006666000066660000666600005a5a000211112000111100001ee100001111000011110000000000000000000000000000000000000000000000000000000000
00666600006666000066660000666600001111000011110000111100005555000055550000000000000000000000000000000000000000000000000000000000
00500500005005000050050000666600002002000050050000500500005005000050050000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10106060606060606060606060606060601060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060
60606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060
10100000000000000000100010101000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000100000000000100010001000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000100000000000100010001000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000100000000000100010001000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000000000000000000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000000000000000000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010000000101010101010101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010100000101010101010101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101000000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001011111111321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10001000000000000000001000000000321000000000000000000000000010101010101010101010101010101010101010103010101010101010101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10001000000000001010103211111111324200000000000000000000000010101010101010101010101010101010101010103010101010101010101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010103200000000324200000000000000000000000010002222102222221010101010222222102210220000000000001010101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10222222221212222212223200000000324200000000000010000000101010320000100000001010101031000000100010000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000000000000000321000000000001010001010101010320000110000001121103100000000100000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000000000101010001000000000001010001010101010320000000000000000110000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101021000000000000000031101010001000000000101010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10102110210000000000003110211010001000000000001010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101021102100000000311021101010001000000000001010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010211021000031102110101010001010101010101010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010606010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101000000000
__gff__
00424200020080004200000000000000000002020000000000000000000000000002020a0a0000000000000000000000004a4a0a00000000000000000000000040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0100000000000000000000000000000000000000000000000000000000010101000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
0100000000000024000000000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
0100000001000024000000000000000000000000000000000000000000240001000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
0100000001000024000000000000000000000000000000000000000000240001000000000000000000000101010100000000000000000000000101010100000000000000000000000101010100000000000000000001010101010100000000000000000000010101010100000000000000000000010101010100000000000000
0100010123000000000000000000000000000000000000000000000000240001000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
0100012300000000000000000000000000000000000000000000000000240001000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000101000000000000000000000000000100000000000000
0100012300000000000000000000000000000000000000000000002431010001000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100012300002401230000000000000000000000000000000000000131010001000000000000000000000000000100000000000000000000000000000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100012300000000000000000000000000000000000031000000000131010001000000000000000000000000000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100012300000000000000000000000000000000000031313100000131010001000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100010000240101010101010100000000000000000031313131310131010001000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100010000000000000000001201000000000024130031323232313114000001000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100010101010101010101010101002728000024010101233224010101010101010101010101010101010101000101010101010101010101010101000101010101010101010101010101000101010101010101010101010101000101010101010101010101010101000101010101010101010101010101000100000000000000
0100010101010101010101010101003738000024010101233224010101010101000000000000000000000000060100000000000000000000000000060100000000000000000000000000060100000000000000000000000000060100000000000000000000000000060100000000000000000000000000060100000000000000
0100010101010100010101010101010101010101010101233224010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100010101010100010101010101010101010101010101233224010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100010101010100010101010101010101010101010101233224010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000010101010101010101010101010101233224010132010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011c000000001c1c1c1c1c1c1c01010101010101010101230024010132010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100003301010101010101010101010101010101010101230024010132010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01001c3300000000240000000000000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010000331c000000241c00000000000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011c00331c003300240101000000000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010000331c0033002400001c0101000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01001c33001c330000001c010100000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100002401012300240101010000000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010100230000010101010101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100010113120101000024010101010101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100001100000101230024010101010101010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000101230024000000000001010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
