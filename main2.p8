pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--Made By Gurg
-- i want it to be made clear that i never said i was actually good at programming


#include includes/camera.lua
#include includes/gun.lua
#include enums.p8
#include npc_scripts.p8

--------
---GLOBALS
----------
timer = 0
npcs = {}
sensors = {}
DEBUG = true

enemy_scripts = {
    [NPC_IDS.MOVING_VILLAGER] = function(n) m_villager_script(n) end,
    [NPC_IDS.EXPLOSION] = function(n) explosion_script(n) end 
}

----------
---MATHS
----------
--rounds x to nearest whole integer
function round(x)
    local y = x - flr(x)
    if y >= 0.5 then return ceil(x) 
    else  return flr(x)
    end
end

--finds the euclidean distance between two points
function e_dist(x, y, a, b)
    return sqrt((a-x)^2 + (b-y)^2)
end

--changes the basis of the vector [x,y] to [xb,yb]
function change_basis(xb, yb, x, y)
    x = x - xb --x translated
    y = y - yb
    return x, y
end

--rotate pixel around given basis
function rotate_pixel(x, y, theta, xb, yb, b)

    if not b then b = false end
    if not basis_x then basis_x = 0 end
    if not basis_y then basis_y = 0 end

    change_basis(xb, yb, x, y)

    local d = 360
    local a = 1
    local new_x = x*a*cos(theta/d) - y*a*sin(theta/d)
    local new_y = x*a*sin(theta/d) + y*a*cos(theta/d)

    --todo write special conditions for certain angles to fix how it looks?

    if b == false then
        return new_x +basis_x, new_y+basis_y
    else 
        return new_x, new_y
    end
end

--linear interpolation
function lerp(p0, p1, ratio)
    return (1-ratio)*p0 + ratio*p1
end

function normalize(x, y)
    local l = sqrt( (x*x)+(y*y) ) 
    return x / l, y / l

end


  

---------
---CAMERA CODE
---------

function update_camera()

    local camera_speed = 1
    if player.px - camera_pos.x > 70 then 
        camera_pos.x += camera_speed
    elseif player.px - camera_pos.x < 54 then 
        camera_pos.x -= camera_speed
    end

    camera_speed = 1.4
    if player.py - camera_pos.y > 90 then 
        camera_pos.y += camera_speed
    elseif player.py - camera_pos.y < 40 then 
        camera_pos.y -= camera_speed
    end

    ---lower bounds
    local lower_y = 0 
    local lower_x = 0

    if camera_pos.x < lower_x then camera_pos.x = lower_x end
    if camera_pos.y < lower_y then camera_pos.y = lower_y end

    ---upper bounds
    local upper_x = 30*8
    local upper_y = 16*8

    if camera_pos.x > upper_x then camera_pos.x = upper_x end
    if camera_pos.y > upper_y then camera_pos.y = upper_y end

    camera(camera_pos.x, camera_pos.y)
end

------------
---ACTOR CODE
------------

function hit_tile(flag, x, y, w ,h)
    
    --need to offset w and h
    for i=x, x+w-1, w-1 do
        if fget(mget(i/8, y/8), flag) or fget(mget(i/8, (y+h-1)/8), flag) then
            return true
        end
    end
    return false
end

--create actor(x spawn, y spawn, width, height, sprites)

function create_actor(x, y, w, h, anim)
    return {
        x = x, -- map pos (tiles)
        y = y,
        px = x*8, -- world pos (pixels)
        py = y*8,
        dx = 0,
        dy = 0,
        w = w,
        h = h,
        anim = anim,
        frame = 1,
        timer = 0,
        flipx = true,
        jump_time = 0,
        hbx = 2,
        hby = 2,
        flags ={
            in_air = true
        }
    }
end

function create_npc(x, y, w, h, anim, id)

    local actor = create_actor(x, y, w, h, anim)

    printh("actor ID"..id.." created at "..x..","..y)

    actor.id = id

    actor.dest_x = actor.px --same as pixel positions
    actor.dest_y = actor.py
    add(npcs, actor)

    return actor
    
end

function delete_actor(actor)
    del(npcs, actor)
    actor = nil
    printh("actor deleted")
end




function move_byx(npc, x, y)
    npc.px += x
end


function npc_update(npc)

    local speed = 0.5

    local script = enemy_scripts[npc.id]

    npc.timer += 1

    script(npc)

    if npc.px < npc.dest_x then   
        move_byx(npc,speed, 0)
    elseif npc.px > npc.dest_x then 
        move_byx(npc, -speed, 0)
    end
    
end

function actor_draw(actor)
    spr(actor.anim[actor.frame], actor.px, actor.py, 1, 1, actor.flipx)
end

function hit_tile(flag, x, y, w ,h)
    --need to offset w and h
    for i=x, x+w-1, w-1 do
        if fget(mget(i/8, y/8), flag) or fget(mget(i/8, (y+h-1)/8), flag) then
            return true
        end
    end
    return false
end

---same as hit tile but only checks the top of the hitbox
function top_hit_tile(flag, x, y, w)
    --need to offset w and h
    if fget(mget(x/8, y/8), flag) or fget(mget((x+w-1)/8, y/8), flag) then
        return true
    end
    return false
end

---for tiles in which only the top hald of the tile is solid
function hit_tile_tophalf()
    
end

function bot_hit_tile(flag, x, y, w, h)
    --need to offset w and h
    if fget(mget(x/8, (y+h-1)/8), flag) or fget(mget((x+w-1)/8, (y+h-1)/8), flag) then
        return true
    end
    return false
end

-----
---SCANNING CODE
-----

--works backwards from index and returns the postion of the closest space to the index
--returns the index if there is a space and -1 otherwise
function find_space(start, stop, text)

    while stop > start do
        if sub(text, stop, stop) ==  " " then 
            return stop
        end
        stop -= 1
    end
    return -1
end

--prints dialogue and item descriptions to the screen
function print_desc(spr)

    local text = collectables[spr]

    local xoff = 1
    local yoff = 100

    local max_chars = 30

    local last_space = 0 --position of last space in string

    local p_line = 0 --print line

    --draw outline
    
    --draw text box
    rectfill(camera_pos.x+xoff, camera_pos.y+yoff, camera_pos.x+xoff+(31*4)+2, camera_pos.y+yoff+((6*3)+3), 0)
    rect(camera_pos.x+xoff, camera_pos.y+yoff, camera_pos.x+xoff+(31*4)+2, camera_pos.y+yoff+(6*3)+3, 8)

    --work out where the line breaks are
    last_space = find_space(0, 31, text)
    last_space2 = find_space(32, 60, text)

    --calculate offsets for text
    local x = camera_pos.x+xoff+2
    local y = camera_pos.y+yoff+2

    --display text
    print(sub(text, 0, last_space), x, y, 7)
    print(sub(text, last_space+1, last_space2), x, y+6, 7)
    print(sub(text, last_space2+1, 88), x, y+12, 7)

end

function check_los()

    local cursor_x = stat(32)+camera_pos.x
    local cursor_y = stat(33)+camera_pos.y

    for t = 0, 1, 0.1 do 
        local i_x = lerp(player.x, cursor_x, t)
        local i_y = lerp(player.y, cursor_y, t)
        
        if fget(mget(i_x/8, i_y/8), TILE_FLAG.SOLID) == true then
            return false
        end
    end

    return true

end

--looks up sprite number at scanning reticule
function scanner_lookup_spr()

    for i=cursor.px, cursor.px+cursor.w, 1 do
        for j=cursor.py, cursor.py+cursor.w, 1 do
            local s = mget(i/8, j/8)
            return s 
        end
    end
    return -1
end



------------
--- PLAYER CODE
------------

function mouse_left_press()
    return (stat(34) | 0b110) == 7
end

function mouse_right_press()
    return (stat(34) | 0b101) == 7
    
end


function draw_hitbox(actor)
    local hb_offset = actor.hb_xoff --offsets hitbox from absolute player position
    local hb_colour = 7

    local actor_drawx = actor.px+actor.hbx
    local actor_drawy =actor.py+actor.hby

    --rect(actor.px+hb_offset, actor.py, actor.px+hb_offset+actor.w, actor.py+actor.h, hb_colour)
    rect(actor_drawx, actor_drawy, actor_drawx+actor.w, actor_drawy+actor.h)
end

function floor_collision(actor)
    if (actor.dy >= 0) and bot_hit_tile(TILE_FLAG.SOLID, actor.px+actor.hbx, actor.py+actor.dy+actor.hby, actor.w, actor.h) then

        if actor.flags.in_air and not (btn(0,1) or btn(1,1)) then 
            actor.dx = actor.dx / 2
        end

        actor.flags.in_air = false
        actor.flags.falling = false
        actor.dy = 0

        return true
        
    end

    return false
end

function wall_collision(actor)
    if hit_tile(TILE_FLAG.SOLID, actor.px+actor.dx+actor.hbx, actor.py+actor.hby, actor.w, actor.h) then
        return true
    end
    return false
end

function roof_collision(actor)
    
    if top_hit_tile(TILE_FLAG.SOLID, actor.px+actor.hbx, actor.py+actor.dy+actor.hby, actor.w) then
        actor.flags.falling = true
        actor.dy = 0.5

        return true
    end

    return false

end


function player_draw(actor)

    if actor.flags.in_air then
        if actor.dy < 0 then 
            spr(actor.anim[4], actor.px, actor.py, 1, 1, actor.flipx)
        elseif actor.dy > 0 then
            spr(actor.anim[5], actor.px, actor.py, 1, 1, actor.flipx)
        end
    else 
        spr(actor.anim[actor.frame], actor.px, actor.py, 1, 1, actor.flipx)
    end


    --draw companion
    if actor.upgrade_level > 0 then 
        circfill(actor.px-1, actor.py-1, 2, 6)
    end

end

function player_update_animations(player)
    ---animation
    if timer % 4 == 0 then 
        player.frame += 1
    end

    if player.frame > 3 then
        player.frame = 2
    end

    if player.dx == 0 then 
        player.frame = 1
    end
end

function player_update(player)


    player_update_animations(player)

    
    local accel = 0.03
    local max_dx = 0.6


    local GODMODE = false
    if GODMODE then 

        if btnp(0, 1) then player.dx -= 1
        elseif btnp(1, 1) then player.dx += 1
        elseif btnp(2, 1) then player.dy -= 1
        elseif btnp(3, 1) then player.dy += 1
        end

        player.px += player.dx
        player.py += player.dy

        player.dx = 0
        player.dy = 0

        return
    end

    
    if player.flags.in_air then
        accel = accel*0.5
    end

    --moving left
    if btn(0, 1) then 

        if player.dx > 0.35 then 
            player.dx = 0.35
        end

        player.dx += -accel
        player.dx = mid (max_dx, player.dx, -max_dx)
        player.flipx = true

    -- moving right
    elseif btn(1, 1) then 

        if player.dx < -0.35 then
            player.dx = -0.35
        end

        player.dx += accel
        player.dx = mid (-max_dx, player.dx, max_dx)
        player.flipx = false

    --friction
    elseif not player.flags.in_air then

        local friction = 0.8 --lower = more friction

        player.dx = player.dx * friction
        if abs(player.dx) < 0.05 then
            player.dx = 0
        end
    end

    if btn(2, 1) and not player.flags.in_air then 

        
        player.flags.in_air = true
        player.dy = -1
    end 



    ----COLLISION
   

    roof_collision(player)

    local touching_wall = wall_collision(player)
    local rough = hit_tile(TILE_FLAG.ROUGH, player.px+player.dx+player.hbx, player.py+player.hby, player.w, player.h)
        
    if touching_wall then 


       player.dx = 0
        
        player.dy =  player.dy*0.75

        if btn(2,1) and rough then -- wall jump
            if not player.flipx then  --facing right
                player.dx += -1
            else
                player.dx += 1
            end
            player.flags.in_air = false
        end

        ---this part stops you reverse zipping through the walls 
        local still_touching_wall = wall_collision(player)
        if still_touching_wall then 
            player.dx = 0
        end

    else
        player.flags.in_air = true
    end



    local gravity = 0.025
    local max_dy = 1
    player.dy += gravity


    player.dy = mid (-max_dy, player.dy, max_dy)

    if touching_wall and not rough then 
        printh("touching wall")
        if btn(3,1) then
            player.dy = 1.5
        end
    end

    

    floor_collision(player)--this needs to be last, idr why

    player.px += player.dx
    player.py += player.dy

    player.x = flr(player.px) >> 3 
    player.y = flr(player.py) >> 3 


    ---after move check for other random things

    ---check if touching upgrader
    if hit_tile(TILE_FLAG.UPGRADER, player.px, player.py, 8, 8) then
        player.upgrade_level = 1
    end

    hit_collectable(player)

    ---check if touching gold, if so delete it 
end

function hit_collectable(player)

    local x = player.px + player.hbx
    local y = player.py + player.hby

    local w = player.w-2 --theyre indexes now so offset them
    local h = player.h-5

    local y2 = y+h

    local flag = TILE_FLAG.COLLECTABLE

    

    for i=x, x+w, w do

        if fget(mget(i/8, y/8), flag) then
            mset(i/8, y/8, 0)
            player.gold +=1

        elseif fget(mget(i/8, y2/8), flag) then
            mset(i/8, y2/8, 0)
            player.gold +=1
        end
    end
end
--------------
---CURSOR CODE
--------------

function cursor_update(cursor)
    cursor.px = stat(32)+camera_pos.x-5
    cursor.py = stat(33)+camera_pos.y-5

    cursor.left_press = mouse_left_press()
    cursor.right_press = mouse_right_press()

end

function cursor_draw(cursor)
    cursor.c = 7

    if scanner_lookup_spr() == 1 then cursor.c = 10 end  

    rect(cursor.px, cursor.py, cursor.px+cursor.w, cursor.py+cursor.w, cursor.c)

    if cursor.left_press then print_desc(scanner_lookup_spr()) end
end



function laser_draw(laser, player, cursor)
    ---first check if the laser will collide with anything
    for i=0.0, 1, 0.01 do 

        ---collision coords
        local px = lerp(player.px, cursor.px, i)
        local py = lerp(player.py, cursor.py, i)

        local x = px >> 3
        local y = py >> 3


        if fget(mget(x, y), TILE_FLAG.SOLID) then 

            
            ---tile breaking code
            local b1_limit = 20 --frames
            if fget(mget(x, y), TILE_FLAG.BREAKABLE1) then 
                laser.timer += 1

                if laser.timer == b1_limit then 

                    if mget(x,y) == 52 then 
                        mset(x,y, 28)
                    else
                        mset(x,y,0)
                    end
                    laser.timer = 0
                end 
            end

            if timer % 2 == 0 then 
                line(player.px, player.py, px-(0.125), py-(0.125), 10)
                return
            else
                line(player.px, player.py, px-(0.125), py-(0.125), 8)
                --circfill(x, y, 1, 10)
                return
            end
        end
    end

    if timer % 2 == 0 then 
        line(player.px, player.py, cursor.px, cursor.py, 10)
    else
        line(player.px, player.py, cursor.px, cursor.py, 8)
    end
end



-------------------------------------
-------------------------------------
--CORE FUNCTIONS
-------------------------------------
-------------------------------------

function mkb_init(enable, btn_emu, ptr_lock)
    -- pass args as bitfield into hardware register
    poke(0x5f2d,(enable   and 1 or 0)
               |(btn_emu  and 2 or 0)
               |(ptr_lock and 4 or 0))
end

function _init()

    mkb_init(true, false, false)

    camera_pos = {
        x = 0, 
        y = 0
    }

    player = create_actor(17, 11, 4, 6, {64, 80, 96, 65, 66})
    player.upgrade_level = 0
    player.gold = 0

    villager1 = create_npc(10, 52, 7, 8, {70}, NPC_IDS.MOVING_VILLAGER)

    villager2 = create_npc(3, 52, 8, 8, {68}, NPC_IDS.MOVING_VILLAGER)

    cursor = create_actor(0, 0, 3, 3, {})

    laser = {colliding = false, timer = 0}

    cursor.left_press = false
    cursor.right_press = false

    
end

function debug()
    
    dmesg = {} --need to reinitialise every frame
    test = 0
    add(dmesg, timer)
    add(dmesg, player.dx)
    add(dmesg, player.dy)
    add(dmesg, " ")
    add(dmesg, laser.timer)
    
    local line = 0
    local camx, camy = get_camera_pos()
    for mesg in all(dmesg) do
        color(8)
        print (mesg, 5+camx, line+camy )
        line += 6
    end
end

function _update60()
    timer += 1
    player_update(player)

    foreach(npcs, npc_update)

    cursor_update(cursor)

    if cursor.right_press then
        --create_npc(cursor.px/8, cursor.py/8, 8, 8, {29}, NPC_IDS.EXPLOSION)
    end

    
end

function draw_ui(camera_pos)

    local camx, camy = get_camera_pos()

    print(player.gold.."/100", camx+100, camy+6, 10)

end

function _draw()
    cls()
    local celwh = 120 
    map(0,0, 0, 0, celwh,celwh) --draws background objects

    


    --TODO move this out of draw and split up laser_draw()
    if cursor.right_press and player.upgrade_level > 0 then
        laser_draw(laser, player, cursor)

    else ---reset laser params
        laser.timer = 0
    end


    foreach(npcs, actor_draw)


    foreach(bullets, bullet_update_and_draw)

    


    --draw_hitbox(player)
    cursor_draw(cursor)


    draw_ui(camera_pos)
    
    
    update_camera() 
    player_draw(player)
    map(0,0, 0,0, celwh,celwh, 32) --draws foreground objects
    

    if DEBUG then
        debug()
    end
end
__gfx__
00000000111111111000000100000000010cc010000440000000000000000000c111111100000000000000000000000000a00000000000000000000000000000
0000000011111111111111110000000001066010000440000000000000000000c111111100000000000000000000000000a00000000000000000000000000000
00000000111111111000000100000000010cc010000440000000000000000000c111111100000000111111111111111100a00000000000000000000000000000
00000000111111111111111100000000010cc010000440000000000000000000c11111110000000012a0aa2112aa0a2100000000000000000000000000000000
00000000111111111000000100000000010cc010000660000000000000000000c111111100000000182aa281182aa28100a07000000000000000000000000000
00000000111111111111111100000000010cc010000440000000000000000000c111111100000000018228100182281000000700000000000000000000000000
00000000111111111000000146444444010cc010000440000000000077000000c111111100000000001881000018810000000070000000000000000000000000
00000000111111111111111146444444010cc010000440000000000077a777a0c111111100000000000110000001100000000007000000000000000000000000
00000000111111111111111111111111000000005555555500000000000000000000000000000000000000000000000000000000700000070000000000000000
00000000111111110111111111111110006666004444444400000044444444444400000044444444000000111111100000000000770007700000000000000000
0000000001111111001111111111110006d7d6605555555500000444543333333340000033333333000011172727111000000000077707000000000000000000
00000000000111000001111111111000067dd6604444444400004444454333333334000033333333000117222222721000000000000700000000000000000000
0000000000011100000011111111000006ddd6604444444400044444445433333333400033333333000122288888221000000000007070000000000000000000
000000000000100000000111111000005666666555555555004444444445433333333400333333330001228888882210000aaa00007077000000000000000000
00000000000000000000001111000000056666504444444404444444444454335353534033333333000111111117771000a7aa00077007700000000000000000
0000000000000000000000011000000050500505444444444444444444444543353535343333333300000000000077000a7aaaa0770000770000000000000000
00000000111111111111111111111101011111111888888111111111000000000000000055555555000000000000000000000000000000000000000000000000
00000000111111111111111111111110101111110188881001818818000000000000000000000000000000700000000000000000000000000000000000000000
00000000111111111111111111111111111111111111111111181188000000666600000000000000000000000070000000000000000000000000000000000000
000000001111111111111111111111101011111118111811181118880000066dd660000000000000700000000770000000000000000000000000000000000000
00000000111111111111111111111100001111111111111111111188000066d7dd66000000000000070000000700000000000000000000000000000000000000
0000000011111111101111111111111111111111011811110118118800066d7dddd6600000000000000000000000000000000000000000000000000000000000
0000000011110111100101101111111000111111118118101181181800066dddddd6600000000000000000000000000000000000000000000000000000000000
00000000010101010101010111111111011111111181111110001111006666dddd66660000000000000000000000000000000000000000000000000000000000
00000000100000011cccccc1011111011aaa111111001111111111100666666dd666666000000000000000000000000000000000000000000000000000000000
00000000111111111111111111111110011111108118881011111111066666666666666006c7c7c00000000000000000000000a0000000000000000000000000
00000000011111111111111111111111111111118811111118111811666666aaaa666666067c7c70000000000000000000fffaa0000000000000000000000000
00000000101110101c111c1c011111101a111a1a8811181111111111666666aaaa66666606c7c7c0000000000000000000ffaa00000000000000000000000000
00000000111111111111111111111100111111118811111101181111666666aaaa66666606000000000000000000000000faaf00000000000000000000000000
0000000001101111111c111111111111011a11118818111111811810666666677666666606000000000000000000000000aaff00000000000000000000000000
000000001111101111c11c110011111011a11a10818118101188881100555007700555000600000000000000000000000aa00000000000000000000000000000
000000001101111011c111111111111111a111111101110118888881055555077055555006000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000101000999000000000000001101100cc1010000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001111000999999001000010000110010ccc100000000000000000000000000000000000000000000000000000000000
00555500005a5a000055550000000000001c1c0009c1c990010000100011110000ccc10000000000000000000000000000000000000000000000000000000000
005a5a0000555500005555000000000000111100001111900111111000ccc66000a1a660000aaaa0000000000000000000000000000000000000000000000000
0055550000555500005a5a00000000000011110000777100001c1c0000ccc1000011110000a9a900000000000000000000000000000000000000000000000000
006666000066660000666600005a5a000211112000111100001ee1000011110000111100000aaa00000000000000000000000000000000000000000000000000
00666600006666000066660000666600001111000011110000111100005555000055550000aaaa00000000000000000000000000000000000000000000000000
0050050005005000050000500066660000200200005005000050050000500500005005000aa00aa0000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
005a5a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
005a5a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10106060606060606060606060606060601060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060
60606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060
10100000000000000000100010101000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000100000000000100010001000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000100000000000100010001000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000100000000000100010001000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000000000000000000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10100000000000000000000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010000000101010101010101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010100000101010101010101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101000000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010000000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010101010101000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000101000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001011111111321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000001000000000321000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10001000000000000000001000000000321000000000000000000000000010101010101010101010101010101010101010103010101010101010101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10001000000000001010103211111111324200000000000000000000000010101010101010101010101010101010101010103010101010101010101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010101010103200000000324200000000000000000000000010002222102222221010101010222222102210220000000000001010101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10222222221212222212223200000000324200000000000010000000101010320000100000001010101031000000100010000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000000000000000321000000000001010001010101010320000110000001121103100000000100000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000000000101010001000000000001010001010101010320000000000000000110000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101021000000000000000031101010001000000000101010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10102110210000000000003110211010001000000000001010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101021102100000000311021101010001000000000001010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010211021000031102110101010001010101010101010101010101010320000000000000000000000000000000000000000000000000000101000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10101010101010606010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101000000000
__gff__
00022000020000000200000000000000000002024000000000000000800000000002020a0a1a1a000000000000000000001b0a0a1a1a1a00000000000000000000404040404040404080000000000000400000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
01000000000000330000000000000031000000000000000000002b00002b0000000000002a000000002a0000010100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
01000000000000330000003c000000311c1c000000000001010000002b00002b000101010101010101000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
0100000001310033000000000000002401010101012300310000000000002b00310000000000000000000033000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
010000000131313300000000000000000000000012010031000000000000003100000000002a002a00000033000100000000000000000000000101010100000000000000000000000101010100000000000000000001010101010100000000000000000000010101010100000000000000000000010101010100000000000000
0131010123000031310000002b0000002b0000000012012300000101013131002a0000000000000000000001000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000
013101230000313100000000002b002b00000000000000000000000100000000000000002b00000000000001000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000101000000000000000000000000000100000000000000
0131012300003131000000000000000000000000000000000000000000000000000000000000000000013124000100000000000000000000000000000100000000000000000000000000000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100012300002401010000000000000000000000000000000000000000000000000000000000000000013124000100000000000000000000000000000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100012300000031313100000000000000000024010000000000000000000000000000003100310000011c01000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100012300000031003131310000000000000024010100000000000000000000000000003131310000010101000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100010000240101010101230000000000000024010101000000003100000031000000003131313131010101000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
010001000031313131343434010100000000002401010101000031313131313131000000313232321c311400000100000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000101000000000000000000000000000100000000000000
0100010101010101010101010202002728000024010101010101010101010101010101010123322401010101010101010101010101010101010101000101010101010101010101010101000101010101010101010101010101000101010101010101010101010101000101010101010101010101010101000100000000000000
0100010101010101010101010101003738000024010101010101010101010101010101010123322401010101010100000000000000000000000000060100000000000000000000000000060100000000000000000000000000060100000000000000000000000000060100000000000000000000000000060100000000000000
0100010101010101010101010101010101010101010101010101010101010101010101010123322401010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100010101010101010101010101010101010101010101010101010101010101010101010123322401010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0131010101010101010101010101010101010101010101010101010101010101010101010123322401010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000010101010101010101010101010101010101010101010101010101010123322401010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000001010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000024010101010101013401010101230000000101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101000033000000003100000000000101230000000100000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0134000033000000002400000000000101230000010100000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101000033343423002401000000000101230000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101000033343423002400000101000101230000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0134000033000023000000010100000101233636363600000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101000024013101002401010000000101010202020201000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000000000000000000000000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102010101010101010101010101010101010101010101000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020202023401010101010101010101010101010101010000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010100000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101000000000001010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
